@import "https://fonts.googleapis.com/css2?family=Fira+Code:wght@300..700&display=swap"; /*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    :before,
    :after,
    ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-leading: initial;
    }
  }
}
@layer theme {
  :root,
  :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --leading-normal: 1.5;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;

    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;

    margin: 0;
    padding: 0;
  }
  html,
  :host {
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
 
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not ((-webkit-appearance: -apple-pay-button))) or
    (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
 
  ::file-selector-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer components;
@layer utilities {
  .\!hidden {
    display: none !important;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[232px\] {
    max-height: 232px;
  }
  .max-h-\[310px\] {
    max-height: 310px;
  }
  .max-h-\[320px\] {
    max-height: 320px;
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[180px\] {
    max-width: 180px;
  }
  .max-w-\[266px\] {
    max-width: 266px;
  }
  .max-w-\[300px\] {
    max-width: 300px;
  }
  .max-w-\[310px\] {
    max-width: 310px;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-11 {
    gap: calc(var(--spacing) * 11);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-\[\#242424\] {
    border-color: #242424;
  }
  .border-\[\#DBD8E0\] {
    border-color: #dbd8e0;
  }
  .bg-\[\#1B1C22\] {
    background-color: #1b1c22;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-7 {
    padding-block: calc(var(--spacing) * 7);
  }
  .py-9 {
    padding-block: calc(var(--spacing) * 9);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .text-center {
    text-align: center;
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .\!text-\[10px\] {
    font-size: 10px !important;
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[\#7C7A85\] {
    color: #7c7a85;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-black\/50 {
    color: #00000080;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-black\/50 {
      color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-purple-500 {
    color: var(--color-purple-500);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 0.3s;
    transition-duration: 0.3s;
  }
  @media (hover: hover) {
    .hover\:bg-gray-100:hover {
      background-color: var(--color-gray-100);
    }
  }
  .dark\:border:where(.dark, .dark *) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .dark\:border-\[\#262830\]:where(.dark, .dark *) {
    border-color: #262830;
  }
  .dark\:bg-\[\#000000\]:where(.dark, .dark *) {
    background-color: #000;
  }
  .dark\:text-white:where(.dark, .dark *) {
    color: var(--color-white);
  }
  .dark\:text-white\/50:where(.dark, .dark *) {
    color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-white\/50:where(.dark, .dark *) {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  @media (hover: hover) {
    .hover\:dark\:bg-black\/5:hover:where(.dark, .dark *) {
      background-color: #0000000d;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:dark\:bg-black\/5:hover:where(.dark, .dark *) {
        background-color: color-mix(
          in oklab,
          var(--color-black) 5%,
          transparent
        );
      }
    }
  }
}
.left_side {
  background-image: url(/assets/modal4/left_side_bg.png);
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  width: 100%;
  height: 100%;
}
.modal-connect {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-leading: var(--leading-normal);
  line-height: var(--leading-normal);
  font-family: Fira Code, monospace;
}
.lines-primary {
  padding: calc(var(--spacing) * 2);
  background-image: url(/assets/modal4/primary_lines.png);
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  position: relative;
}
.lines-success {
  padding: calc(var(--spacing) * 2);
  background-image: url(/assets/modal4/success_lines.png);
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  position: relative;
}
.lines-error div {
  z-index: 1000;
}
.lines-confirm {
  padding: calc(var(--spacing) * 8);
  background-image: url(/assets/modal4/confirm_lines.png);
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  position: relative;
}
.lines-error {
  border-radius: var(--radius-2xl);
  padding: calc(var(--spacing) * 1);
  background-color: red;
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  position: relative;
}
.left_side_container {
  position: relative;
}
.text-blue {
  color: #4a94c0;
}
.text-orange {
  color: #e9950c;
}
.left_side_container:before {
  content: "";
  background-image: url(/assets/modal4/border_right.png);
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  width: 8px;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
}
.wallet_connect {
  cursor: pointer;
  color: #0006;
  transition-property: all;
  transition-timing-function: var(
    --tw-ease,
    var(--default-transition-timing-function)
  );
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 0.1s;
  transition-duration: 0.1s;
}
@supports (color: color-mix(in lab, red, red)) {
  .wallet_connect {
    color: color-mix(in oklab, var(--color-black) 40%, transparent);
  }
}
@media (hover: hover) {
  .wallet_connect:hover {
    color: var(--color-black);
  }
}
.wallet_connect:where(.dark, .dark *) {
  color: #fff6;
}
@supports (color: color-mix(in lab, red, red)) {
  .wallet_connect:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-white) 40%, transparent);
  }
}
@media (hover: hover) {
  .wallet_connect:hover:where(.dark, .dark *) {
    color: var(--color-white);
  }
}
.wallet-link {
  cursor: pointer;
  align-items: center;
  gap: calc(var(--spacing) * 2);
  padding-inline: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 2.5);
  color: #00000080;
  transition-property: all;
  transition-timing-function: var(
    --tw-ease,
    var(--default-transition-timing-function)
  );
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 0.1s;
  transition-duration: 0.1s;
  display: flex;
}
@supports (color: color-mix(in lab, red, red)) {
  .wallet-link {
    color: color-mix(in oklab, var(--color-black) 50%, transparent);
  }
}
@media (hover: hover) {
  .wallet-link:hover {
    color: var(--color-black);
  }
}
.wallet-link:where(.dark, .dark *) {
  color: #ffffff80;
}
@supports (color: color-mix(in lab, red, red)) {
  .wallet-link:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-white) 50%, transparent);
  }
}
@media (hover: hover) {
  .wallet-link:hover:where(.dark, .dark *) {
    color: var(--color-white);
  }
}
.hovered_wallet {
  opacity: 0;
  flex-shrink: 0;
}
.wallet-link:hover .hovered_wallet {
  opacity: 1;
}
.text-secondary {
  color: #7c7a85;
}
.text-danger {
  color: red;
}
.small_plus {
  max-width: 283px !important;
  max-height: 415px !important;
}
#qrcode {
  justify-content: center;
  align-items: center;
  min-width: 215px;
  display: flex;
  position: relative;
}
#qrcode:not(:has(.loader)):before {
  content: "";
  z-index: 1000;
  background-color: #fff;
  background-image: url(/assets/modal4/wallet_connect_qr.svg);
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: contain;
  width: 57px;
  height: 57px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.loader {
  border: 3px solid;
  border-color: var(--color-black);
  box-sizing: border-box;
  border-bottom-color: #0000;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  margin-inline: auto;
  animation: 1s linear infinite rotation;
  display: inline-block;
}
.loader:where(.dark, .dark *) {
  border-color: var(--color-white);
}
@keyframes rotation {
  0% {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
.wallet_connect_bg {
  background-image: url(/assets/modal4/wallet_connect_bg.png);
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
.pulse-svg {
  animation: 3s ease-in-out infinite pulse;
}
.btn {
  cursor: pointer;
  justify-content: center;
  align-items: center;
  gap: calc(var(--spacing) * 2);
  border-radius: var(--radius-lg);
  width: 100%;
  max-width: 330px;
  padding-inline: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 3.5);
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  transition-property: all;
  transition-timing-function: var(
    --tw-ease,
    var(--default-transition-timing-function)
  );
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 0.3s;
  transition-duration: 0.3s;
  display: flex;
}
@media (hover: hover) {
  .btn:hover {
    opacity: 0.8;
  }
}
.btn-primary {
  color: var(--color-white);
  background-color: #06f;
}
.modal-overlay {
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  background-color: #0000;
  width: 100%;
  height: 100%;
  transition: opacity 0.3s, background-color 0.3s, visibility 0.3s;
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
}
.modal-overlay.active {
  opacity: 1;
  visibility: visible;
  pointer-events: all;
  background-color: #000000b3;
}
.modal-content {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  width: 100%;
  max-width: 730px;
  height: 100%;
  max-height: 570px;
  transition: transform 0.1s, opacity 0.1s, visibility 0.1s;
  display: flex;
  position: absolute;
  top: 50%;
  left: 50%;
  overflow: hidden;
  transform: translate(-50%, -50%) scale(0.9);
  z-index: 2147483647 !important;
}
.wallet-link-connector img {
  height: calc(var(--spacing) * 5);
  width: calc(var(--spacing) * 8);
}
.wallet-link-connector {
  margin-top: calc(var(--spacing) * 2);
  border-top-style: var(--tw-border-style);
  padding-inline: calc(var(--spacing) * 2);
  padding-top: calc(var(--spacing) * 2);
  border-color: #0000001a;
  border-top-width: 1px;
  align-items: center;
  display: flex;
  padding-block: calc(var(--spacing) * 5) !important;
}
@supports (color: color-mix(in lab, red, red)) {
  .wallet-link-connector {
    border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
  }
}
.modal-content.active {
  opacity: 1;
  visibility: visible;
  pointer-events: all;
  transform: translate(-50%, -50%) scale(1);
}
.modal-content.small {
  max-width: 428px;
  max-height: 570px;
}
w3m-modal {
  z-index: 1000;
  z-index: 2147483647 !important;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
